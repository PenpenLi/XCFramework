---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2020/4/8 9:28
---
local BattleScenePlane = BaseClass("BattleScenePlane")

local function __init(self)
    self.planeBackground = nil -- 3D平面 模拟背景
    self.centPos = nil         -- 中心坐标
    self.allBattlePos = {}
end

local function __delete(self)
    self.centPos = nil
    self.allBattlePos = {}
    self.planeBackground:SetActive(false)
    self.centPos = Vector3.zero;
end

local function GetCorners(camera, distance)
    local corners = CameraUtil.CalCornersByCamera(camera, distance)
    local halfFOV = (camera.fieldOfView * 0.5) * Mathf.Deg2Rad
    local aspect = camera.aspect

    local height = distance * Mathf.Tan(halfFOV)
    local width = height * aspect
    local tx = camera.transform
    local tempcorners = {}
    tempcorners[1] = Vector3.New(corners[0].x, corners[0].y, corners[0].z)
    tempcorners[2] = Vector3.New(corners[1].x, corners[1].y, corners[1].z)
    tempcorners[3] = Vector3.New(corners[2].x, corners[2].y, corners[2].z)
    tempcorners[4] = Vector3.New(corners[3].x, corners[3].y, corners[3].z)
    return tempcorners
end

local function InitScene(self)
    --todo 设置背景
    self.planeBackground:SetActive(true)
    -- 计算面板位置
    self:CalPlaneTransform()
    -- 计算战斗区域的位置点
    self:CalAllBattlerPos()
end

local function CalPlaneTransform(self)
    -- 获取主摄像机
    local camera = CameraManager:GetInstance().mainCamera:GetCamera()
    -- 获取相机距离
    local distance = CameraMgr:GetInstance().mainCamera:GetFollowDistance()
    -- 获取相机显示区域的四个角
    local corners = GetCorners(camera, distance)

    -- position
    local position = corners[1]:Add(corners[2]) / 2;
    local position1 = corners[3]:Add(corners[4]) / 2;
    local finalPos = position:Add(position1) / 2;
    self.planeBackground.transform.position = finalPos;

    -- rotation
    local tempQua = CameraMgr.mainCamera.transform.rotation;
    local quaternion = Quaternion.New(tempQua.x, tempQua.y, tempQua.z, tempQua.w);
    local euler = quaternion:ToEulerAngles();
    local finalVec = Vector3.New(euler.x, euler.y, euler.z);
    quaternion = Quaternion.Euler(finalVec.x, finalVec.y, finalVec.z);
    self.planeBackground.transform.rotation = quaternion;

    -- scale
    local halfFOV = (camera.fieldOfView * 0.5) * Mathf.Deg2Rad;
    local aspect = camera.aspect;
    local height = 10 * Mathf.Tan(halfFOV);
    local width = height * aspect;
    this.planeBackground.transform.localScale = Vector3.New(width / 6.4, height / 3.6, 1.0);

end

BattleScenePlane.__init = __init
return BattleScenePlane
