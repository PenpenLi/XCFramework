---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by admin.
--- DateTime: 2020/4/10 14:33
---

local Character = BaseClass("Character", TransformObject)

local function InitDefaultAction(self)
    self.aStandBy = require("Unit.UnitAction").New()
end

local currentAction = nil
local nextAction = nil

local function __init(self)
    --战斗id
    self.fighterId = nil
    --龙骨模型
    self.shape = nil

    --朝向
    self.worldDir = nil
    --坐标
    self.worldPos = nil
    self.speed = nil
    self.layer = SceneLayer.Character

    --加载模型标志位
    self.initResourceOk = false
    self.inited = false

    --角色创建好了后,是否显示隐藏
    self.hide = false

    --  名字，血条， 特效，代理
    self.hudAgent = nil

    self.root = nil
    -- 加载后的资源
    self.pfb = nil
    -- 模型
    self.model = nil
    self.modelName = nil

    -- 角色资源加载回调
    self.resourceCallBack = nil

    self.actionConttroller = nil

    InitDefaultAction(self)

end

local function Initialize(self, shape, pos, dir, callback)
    self.shape = shape
    self.worldPos = pos
    self.worldDir = dir
    self.resourceCallBack = callback
    if self.inited then
        return
    end
    self.hudAgent = require "Logic.Character.HudAgent".New(self)
    local fullPath = "" .. shape
    -- 加载
    GameObjectPool:GetInstance():GetGameObjectAsync(fullPath, BindCallback(self, self.CharacterLoadedEnd))
    self.inited = true
end

local function CharacterLoadedEnd(self, pfb)
    if IsNull(pfb) then
        return
    end
    self.pfb = pfb
    pfb.transform.position = Vector3.zero
    pfb.transform:SetParent(self.transform, false)
    self.model = require "Character.Model.Model".New(self)
    self.initResourceOK = true

    -- self.hide为false表示默认不隐藏
    self:SetVisible(self.hide)

    self:RefreshCharacterView()
    if self.resourceCallBack then
        self.resourceCallBack()
    end

    self:StartUnitAction()
end


-- 开始执行单位动作
-- @return true     成功执行动作
--         false    未成功执行动作，将动作覆盖到下一个动作
local function StartUnitAction(self, action, stop, callback)
    action = action or self.aStandBy
    stop = stop or false
    if currentAction then
        if currentAction ~= action then
            if (currentAction:IsEnd()) then
                currentAction = action
                currentAction:Start(self, true, callback)
            elseif stop or currentAction:CanStop() then
                currentAction:Terminate(self)
                currentAction = nil
                currentAction = action
                currentAction:Start(self, true, callback)
            else
                --不可结束，覆盖下一个动作
                if (nextAction) then
                    nextAction = nil
                end
                nextAction = action
            end
        end
    else
        currentAction = action
        currentAction:Start(self, true, callback)
    end
    currentAction:PlayAction(self, 0, now);
end

-- 刷新所外形相关数据
local function RefreshCharacterView(self)
    if not self.model then
        return
    end

    if self.hudAgent then
        self:RefreshHudView()
    end

    self:UpdateLayer()

end

local function RefreshHudView(self)

end

local function UpdateLayer()
    if not (self.initResourceOK) then
        return
    end

    self.gameObject.layer = self:GetLayer();
    local components = self.gameObject:GetComponentsInChildren(CS.UnityEngine.Transform);
    local length = components.Length - 1;
    for i = 0, length do
        components[i].gameObject.layer = self.layer;
    end
end

local function LateTick(self, delta)
    if not self.visible then
        return
    end

    if self.hudAgent then
        self.hudAgent:LateTick(delta)
    end
end

local function __delete(self)
    if self.hudAgent then
        self.hudAgent = nil
    end
end

Character.__init = __init
Character.Initialize = Initialize
Character.CharacterLoadedEnd = CharacterLoadedEnd
Character.RefreshCharacterView = RefreshCharacterView
Character.RefreshHudView = RefreshHudView
Character.StartUnitAction = StartUnitAction
Character.UpdateLayer = UpdateLayer
Character.LateTick = LateTick
Character.__delete = __delete
return Character